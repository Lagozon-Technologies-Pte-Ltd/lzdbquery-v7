[
    {
        "input": "List all companies with their vendor IDs and names.",
        "query": "SELECT [ID] AS CompanyID, [VendorId], [CompanyName] FROM [Company]"
    },
    {
        "input": "Show all products with their SKUs and MRP prices.",
        "query": "SELECT [SKU], [MSKU], [ProductName], TRY_CAST([MRP] AS DECIMAL(10,2)) AS MRP FROM [ProductMaster] WHERE [MRP] IS NOT NULL"
    },
    {
        "input": "Find all Amazon listings with their ASINs and available quantities.",
        "query": "SELECT [Asin], [OriginalSku], [MSKU], [Quantity] FROM [AmazonListing] WHERE [Asin] <> '#N/A'"
    },
    {
        "input": "Show OTC sales with order numbers, quantities, and amounts for orders placed in 2023.",
        "query": "SELECT [OrderNo], TRY_CAST([Quantity] AS INT) AS Quantity, TRY_CAST([Amount] AS DECIMAL(10,2)) AS Amount FROM [tbl_OTCSale] WHERE TRY_CONVERT(DATE, [OrderDate], 105) BETWEEN '2023-01-01' AND '2023-12-31'"
    },
    {
        "input": "List all Autofurnish orders with their totals, ordered by highest amount first.",
        "query": "SELECT [OrderNo], [Total] FROM [Autofurnish_OrderS] WHERE [Total] IS NOT NULL ORDER BY [Total] DESC"
    },
    {
        "input": "Show inventory details with warehouse and rack information for products with status 'Active'.",
        "query": "SELECT i.[UniqueCode], i.[MSKU], w.[Name] AS Warehouse, r.[Name] AS Rack, s.[StatusName] FROM [InventoryDetail] i LEFT JOIN [tbl_Warehouse] w ON i.[WarehouseId] = w.[ID] LEFT JOIN [tbl_Rack] r ON i.[RackId] = r.[ID] LEFT JOIN [StatusMaster] s ON i.[Status] = s.[Id] WHERE s.[StatusName] = 'Active'"
    },
    {
        "input": "Find all Amazon orders with their SKUs and quantities.",
        "query": "SELECT [OrderId], [SKU], TRY_CAST([Quantity] AS INT) AS Quantity FROM [tbl_Amazon] WHERE [OrderId] IS NOT NULL"
    },
    {
        "input": "List order items with their SKUs, quantities, and prices for order INV-GMPL-15192.",
        "query": "SELECT [Lineitem_sku], [Lineitem_quantity], [Lineitem_price] FROM [AF_OrderItemS] WHERE [AFOrderId] = 'INV-GMPL-15192'"
    },
    {
        "input": "Show the total sales amount by company for OTC sales.",
        "query": "SELECT c.[CompanyName], SUM(TRY_CAST(o.[Amount] AS DECIMAL(10,2))) AS TotalSales FROM [tbl_OTCSale] o JOIN [Company_mapping] m ON TRY_CAST(o.[CompanyBillID] AS INT) = m.[ID] JOIN [Company] c ON m.[CompanyId] = c.[ID] GROUP BY c.[CompanyName] HAVING SUM(TRY_CAST(o.[Amount] AS DECIMAL(10,2))) > 0"
    },
    {
        "input": "Find products that are listed on Amazon but have no inventory in the warehouse.",
        "query": "SELECT a.[OriginalSku], a.[MSKU], p.[ProductName] FROM [AmazonListing] a JOIN [ProductMaster] p ON a.[OriginalSku] = p.[SKU] LEFT JOIN [InventoryDetail] i ON p.[MSKU] = i.[MSKU] WHERE i.[UniqueCode] IS NULL AND a.[OriginalSku] IS NOT NULL"
    },
    {
        "input": "Show the top 5 most frequently ordered products across all channels.",
        "query": "SELECT TOP 5 p.[SKU], p.[ProductName], COUNT(*) AS OrderCount FROM ( SELECT [ProductID] FROM [tbl_OTCSale] WHERE [ProductID] IS NOT NULL UNION ALL SELECT pm.[ID] FROM [tbl_Amazon] a JOIN [AmazonListing] al ON a.[SKU] = al.[Sku] JOIN [ProductMaster] pm ON al.[OriginalSku] = pm.[SKU] UNION ALL SELECT pm.[ID] FROM [AF_OrderItemS] o JOIN [ProductMaster] pm ON o.[Lineitem_sku] = pm.[SKU] ) AS combined JOIN [ProductMaster] p ON combined.[ProductID] = p.[ID] GROUP BY p.[SKU], p.[ProductName] ORDER BY OrderCount DESC"
    },
    {
        "input": "Calculate inventory turnover by warehouse for the last 6 months.",
        "query": "WITH InventoryChanges AS ( SELECT [WarehouseId], [MSKU], [Status], COUNT(*) AS ChangeCount FROM [InventoryDetail] WHERE [ModifiedDate] >= DATEADD(MONTH, -6, GETDATE()) GROUP BY [WarehouseId], [MSKU], [Status] ) SELECT w.[Name] AS Warehouse, ROUND(SUM(CASE WHEN ic.[Status] = 0 THEN ic.[ChangeCount] ELSE 0 END) * 1.0 / NULLIF(SUM(CASE WHEN ic.[Status] = 4 THEN ic.[ChangeCount] ELSE 0 END), 0), 2) AS TurnoverRatio FROM InventoryChanges ic JOIN [tbl_Warehouse] w ON ic.[WarehouseId] = w.[ID] GROUP BY w.[Name] HAVING SUM(CASE WHEN ic.[Status] = 4 THEN ic.[ChangeCount] ELSE 0 END) > 0"
    }
]